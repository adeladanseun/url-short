Developer: Adeladan OluwaSeun Francis
LinkedIn: https://www.linkedin.com/in/oluwaseunadeladan
Shortened: 
Features:
Functional without login: Users can generated short links with password protection even without being logged in. The links however can no longer be edited.
User Login and Account creation with password encryption: Website visitors can login and use functional features but will enjoy other features.
Encrpyted Password protection on individual url: Passwords on each URL is encrypted and no one ( not even the admin ) can see your password.
Url information modification for logged-in users: Logged in users can update their URLs and add or remove password.
Url history for logged-in users: URLs generated by a logged in user are stored and associated with the user and are returned on visiting the home page
Dark mode functionality: The website features a dark mode functionality for users who prefers such display conditions.
Responsive Website: As I have much experience with frontend designs, the website is fully responsive.
Extensive JavaScript Code: Following the principle that it works well for those who do not tamper with the source code, I have implemented several procedures to deter frontend modification.

Technology:
Django, Python
HTML, CSS, JavaScript, Django Template System
Api

About:
The URL shortener is a full stack website designed to change Uniform Resource Locator Addresses to a randomly generated string by the server. The links can be protected by passwords allowing users to share links in public forums knowing only authorized parties can be redirected to the original URL.
This project features the most essential skills of a django developer and can be used for link security. Feel free to copy the source code and run on a separate server and also to comment on possible features to include in the application especially in the backend.
In the modify page, users must enter the correct password (if any) in order to delete url, change redirect URL or change the password. The project was inspired by LinkedIn's automatic URL shortner, I just took that inspiration and wrapped other functionality around. The modularity of the project allows for ease of use and can be setup to work with fetch api for other sites.